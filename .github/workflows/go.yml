name: patch HyperDbg mcp

on:
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天自动更新

jobs:
  update-patch:
    runs-on: windows-latest
    steps:
      # 1. 设置环境变量（使用GitHub ENV确保跨步骤共享）
      - name: Set up environment
        run: |
          echo "GH_USER=ddkwork" >> $GITHUB_ENV
          echo "PATCH_FILE=mcp.patch" >> $GITHUB_ENV
          echo "UPSTREAM_URL=https://github.com/HyperDbg/HyperDbg.git" >> $GITHUB_ENV
          echo "FORK_URL=https://github.com/$GH_USER/HyperDbg.git" >> $GITHUB_ENV

      # 2. 修复克隆步骤（强制使用Bash）⭐ 关键修复
      - name: Clone upstream
        run: |
          echo "克隆 HyperDbg 仓库..."
          git clone --recursive "$UPSTREAM_URL" -b user-debugger-breakpoint || {
            echo "::error::克隆仓库失败!"
            exit 1
          }
          cd HyperDbg
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          echo "克隆成功!"
        shell: bash  # 强制使用Bash

      # 3. 检出当前仓库
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          path: current-repo

      # 4. 应用补丁步骤保持不变
      - name: Apply patch and push
        run: |
          # ... [原有应用补丁的代码] ...
        env:
          GH_TOKEN: ${{ secrets.tk }}
          GH_USER: ${{ env.GH_USER }}
          PATCH_FILE: ${{ env.PATCH_FILE }}
        shell: bash
